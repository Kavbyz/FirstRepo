@model Store.Models.Product

@{
    ViewBag.Title = "Create";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.DropDownList("Heading", ViewBag.Headings as SelectList);

        <input type="file" name="upload" id="uploadFile" multiple/>
        <button id="submit" class="btn btn-success">Загрузить</button>
        <script>
            $(document).ready(function () {
                $('#submit').click(function (e) {
                        e.preventDefault();
                        var files = document.getElementById('uploadFile').files;
                        var arrimg = document.getElementsByClassName("inputImg");
                        if (arrimg.length > 0)
                        {
                            var data = new FormData();
                            data.append("imglenght", arrimg.length);
                            for (var i = 0; i < arrimg.length;i++)
                            {
                                data.append("img"+i, arrimg[i].value);                                
                            }
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("DeleteImageOnCreate", "Products")',
                                contentType: false, // Указывает тип содержимого, которое будет передано на сервер.
                                processData: false, // Логическое значение, устанавливающее, должны ли данные, передающиеся с запросом преобразовываться в строку или нет
                                data: data,
                                success: function (result) {
                                    var myNode = document.getElementById("forImage");
                                        while (myNode.firstChild) {
                                            myNode.removeChild(myNode.firstChild);
                                        }
                                },
                                error: function (xhr, status, p3) {
                                    alert(xhr.responseText);
                                }
                            });
                        }

                        if (files.length > 0) {
                            // Конструктор FormData() создает HTML-форму.
                            var data = new FormData();

                            for (var i = 0; i < files.length; i++) {
                                // Метод append() из интерфейса FormData добавляет новое значение в существующий ключ внутри объекта FormData,
                                // или создает ключ, в случае если он отсутствует.
                                data.append("file" + i, files[i]);

                            }
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("Upload", "Products")',
                                contentType: false, // Указывает тип содержимого, которое будет передано на сервер.
                                processData: false, // Логическое значение, устанавливающее, должны ли данные, передающиеся с запросом преобразовываться в строку или нет
                                data: data,
                                success: function (result) {
                                    var str = result.toString();
                                    var arr = str.split(',');
                                    for (var i = 0; i < arr.length; i++) {
                                        //var myNode = document.getElementById("forImage");
                                        //while (myNode.firstChild) {
                                        //    myNode.removeChild(myNode.firstChild);
                                        //}
                                        //if (document.getElementById("forImage").firstChild)
                                        //{
                                        //    document.getElementById("forImage").innerHTML = '';
                                        //}
                                        var img = document.createElement('img');
                                        img.src = arr[i];
                                        var input = document.createElement('input');
                                        input.className = "inputImg";
                                        input.name = "Img";
                                        input.value = arr[i];
                                        input.hidden = "hidden";
                                        document.getElementById("forImage").appendChild(img);
                                        document.getElementById("forImage").appendChild(input);
                                    }
                                },
                                error: function (xhr, status, p3) {
                                    alert(xhr.responseText);
                                }
                            });
                        }
                });
            });
        </script>
       
        <div id="forImage">

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
